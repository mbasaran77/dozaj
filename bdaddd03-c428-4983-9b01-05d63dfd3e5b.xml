<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>&#xD;
&#xD;
IF start THEN&#xD;
	o_vana:=TRUE;&#xD;
	r_trg(Clk:= start, Q=&gt;init);&#xD;
	IF init THEN  &#xD;
		g_tm_pat := TRUE; &#xD;
		g_tm_gen:= FALSE;&#xD;
		g_tm_fan:= FALSE;&#xD;
	END_IF;&#xD;
	o_patlac := TRUE;&#xD;
	timer_patlac(In:=g_tm_pat, PT:=patlac_time, Q=&gt;pt_time_ok, ET=&gt;pt_elapsed);&#xD;
	IF pt_time_ok THEN &#xD;
		o_patlac := FALSE; &#xD;
		g_tm_fan := TRUE;&#xD;
		o_fan:=TRUE;&#xD;
	END_IF;&#xD;
	&#xD;
	&#xD;
	timer_fan(In:=g_tm_fan, PT:=fan_time, Q=&gt;fan_time_ok, ET=&gt;fan_elapsed);&#xD;
	IF fan_time_ok THEN&#xD;
		o_fan:=FALSE;&#xD;
		g_tm_gen:=TRUE;&#xD;
	END_IF;&#xD;
	g_tm_pat := TRUE;&#xD;
	timer_genel(In:=g_tm_gen, PT:=genel_period, Q=&gt;gen_time_ok, ET=&gt;gen_elapsed);&#xD;
	IF gen_time_ok THEN&#xD;
		g_tm_pat := FALSE;&#xD;
		g_tm_fan := FALSE;&#xD;
		g_tm_gen:=FALSE;&#xD;
	END_IF;&#xD;
ELSE&#xD;
	o_fan:= FALSE;&#xD;
	o_patlac:=FALSE;&#xD;
	o_vana:= FALSE;&#xD;
&#xD;
END_IF;</Text></StructuredTextModel>